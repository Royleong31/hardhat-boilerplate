/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Oracle, OracleInterface } from "../Oracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_linkToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_ethUsdPriceFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "initialNum",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalNum",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "remarks",
        type: "string",
      },
    ],
    name: "Number",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "randomResult",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "ReceivedRandomness",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "RequestedRandomness",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    name: "TestingEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    name: "add100",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEthPriceInUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRandomNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "keyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomResult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b50604051620018dd380380620018dd8339818101604052810190620000389190620002ce565b84848173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050620000c4620000b86200012060201b60201c565b6200012860201b60201c565b8260c081815250508160e0818152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505062000356565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022082620001f3565b9050919050565b620002328162000213565b81146200023e57600080fd5b50565b600081519050620002528162000227565b92915050565b6000819050919050565b6200026d8162000258565b81146200027957600080fd5b50565b6000815190506200028d8162000262565b92915050565b6000819050919050565b620002a88162000293565b8114620002b457600080fd5b50565b600081519050620002c8816200029d565b92915050565b600080600080600060a08688031215620002ed57620002ec620001ee565b5b6000620002fd8882890162000241565b9550506020620003108882890162000241565b945050604062000323888289016200027c565b93505060606200033688828901620002b7565b9250506080620003498882890162000241565b9150509295509295909350565b60805160a05160c05160e05161152a620003b3600039600081816105910152818161067c01526106de01526000818161024f015261065b015260008181610325015261094c0152600081816105b20152610910015261152a6000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806394985ddd1161006657806394985ddd14610137578063d67b98a914610153578063dbdff2c114610171578063ddca3f431461017b578063f2fde38b146101995761009e565b80631bc4b86c146100a357806342619f66146100d357806361728f39146100f1578063715018a61461010f5780638da5cb5b14610119575b600080fd5b6100bd60048036038101906100b89190610b06565b6101b5565b6040516100ca9190610b42565b60405180910390f35b6100db610247565b6040516100e89190610b42565b60405180910390f35b6100f961024d565b6040516101069190610b76565b60405180910390f35b610117610271565b005b6101216102f9565b60405161012e9190610bd2565b60405180910390f35b610151600480360381019061014c9190610c19565b610323565b005b61015b6103bf565b6040516101689190610b42565b60405180910390f35b610179610513565b005b6101836106dc565b6040516101909190610b42565b60405180910390f35b6101b360048036038101906101ae9190610c85565b610700565b005b60007fc38430f3cb2270a73a7c6217b557a45d41a72e859e45fbabbce34561c0da8047826064846101e69190610ce1565b6040516101f4929190610d94565b60405180910390a17f9892775cf1f61034d06d447c4cd9053a3648a93c7bd1d1c61cae1212220720408260405161022b9190610b42565b60405180910390a16064826102409190610ce1565b9050919050565b60045481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6102796107f8565b73ffffffffffffffffffffffffffffffffffffffff166102976102f9565b73ffffffffffffffffffffffffffffffffffffffff16146102ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e490610e1c565b60405180910390fd5b6102f76000610800565b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a890610e88565b60405180910390fd5b6103bb82826108c6565b5050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561042f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104539190610f35565b5050509150506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ec9190610fe9565b9050600081600a6104fd9190611149565b8361050891906111c3565b905080935050505090565b61051b6107f8565b73ffffffffffffffffffffffffffffffffffffffff166105396102f9565b73ffffffffffffffffffffffffffffffffffffffff161461058f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058690610e1c565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106099190610bd2565b602060405180830381865afa158015610626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064a91906111f4565b1161065457600080fd5b60006106a07f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061090c565b90507fe5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e816040516106d19190610b76565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000081565b6107086107f8565b73ffffffffffffffffffffffffffffffffffffffff166107266102f9565b73ffffffffffffffffffffffffffffffffffffffff161461077c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077390610e1c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e390611293565b60405180910390fd5b6107f581610800565b50565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b806004819055507fe73382ee77386cb2a660b5529dea033cb39d5f0f19c2ed8b6e4b0cb934db01b3600454836040516109009291906112b3565b60405180910390a15050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f0000000000000000000000000000000000000000000000000000000000000000848660006040516020016109809291906112dc565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016109ad9392919061139e565b6020604051808303816000875af11580156109cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f09190611414565b506000610a128460003060008089815260200190815260200160002054610a5c565b9050600160008086815260200190815260200160002054610a339190610ce1565b60008086815260200190815260200160002081905550610a538482610a98565b91505092915050565b600084848484604051602001610a759493929190611441565b6040516020818303038152906040528051906020012060001c9050949350505050565b60008282604051602001610aad9291906114c8565b60405160208183030381529060405280519060200120905092915050565b600080fd5b6000819050919050565b610ae381610ad0565b8114610aee57600080fd5b50565b600081359050610b0081610ada565b92915050565b600060208284031215610b1c57610b1b610acb565b5b6000610b2a84828501610af1565b91505092915050565b610b3c81610ad0565b82525050565b6000602082019050610b576000830184610b33565b92915050565b6000819050919050565b610b7081610b5d565b82525050565b6000602082019050610b8b6000830184610b67565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bbc82610b91565b9050919050565b610bcc81610bb1565b82525050565b6000602082019050610be76000830184610bc3565b92915050565b610bf681610b5d565b8114610c0157600080fd5b50565b600081359050610c1381610bed565b92915050565b60008060408385031215610c3057610c2f610acb565b5b6000610c3e85828601610c04565b9250506020610c4f85828601610af1565b9150509250929050565b610c6281610bb1565b8114610c6d57600080fd5b50565b600081359050610c7f81610c59565b92915050565b600060208284031215610c9b57610c9a610acb565b5b6000610ca984828501610c70565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cec82610ad0565b9150610cf783610ad0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d2c57610d2b610cb2565b5b828201905092915050565b600082825260208201905092915050565b7f4164646974696f6e000000000000000000000000000000000000000000000000600082015250565b6000610d7e600883610d37565b9150610d8982610d48565b602082019050919050565b6000606082019050610da96000830185610b33565b610db66020830184610b33565b8181036040830152610dc781610d71565b90509392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e06602083610d37565b9150610e1182610dd0565b602082019050919050565b60006020820190508181036000830152610e3581610df9565b9050919050565b7f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00600082015250565b6000610e72601f83610d37565b9150610e7d82610e3c565b602082019050919050565b60006020820190508181036000830152610ea181610e65565b9050919050565b600069ffffffffffffffffffff82169050919050565b610ec781610ea8565b8114610ed257600080fd5b50565b600081519050610ee481610ebe565b92915050565b6000819050919050565b610efd81610eea565b8114610f0857600080fd5b50565b600081519050610f1a81610ef4565b92915050565b600081519050610f2f81610ada565b92915050565b600080600080600060a08688031215610f5157610f50610acb565b5b6000610f5f88828901610ed5565b9550506020610f7088828901610f0b565b9450506040610f8188828901610f20565b9350506060610f9288828901610f20565b9250506080610fa388828901610ed5565b9150509295509295909350565b600060ff82169050919050565b610fc681610fb0565b8114610fd157600080fd5b50565b600081519050610fe381610fbd565b92915050565b600060208284031215610fff57610ffe610acb565b5b600061100d84828501610fd4565b91505092915050565b60008160011c9050919050565b6000808291508390505b600185111561106d5780860481111561104957611048610cb2565b5b60018516156110585780820291505b808102905061106685611016565b945061102d565b94509492505050565b6000826110865760019050611142565b816110945760009050611142565b81600181146110aa57600281146110b4576110e3565b6001915050611142565b60ff8411156110c6576110c5610cb2565b5b8360020a9150848211156110dd576110dc610cb2565b5b50611142565b5060208310610133831016604e8410600b84101617156111185782820a90508381111561111357611112610cb2565b5b611142565b6111258484846001611023565b9250905081840481111561113c5761113b610cb2565b5b81810290505b9392505050565b600061115482610ad0565b915061115f83610fb0565b925061118c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611076565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006111ce82610ad0565b91506111d983610ad0565b9250826111e9576111e8611194565b5b828204905092915050565b60006020828403121561120a57611209610acb565b5b600061121884828501610f20565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061127d602683610d37565b915061128882611221565b604082019050919050565b600060208201905081810360008301526112ac81611270565b9050919050565b60006040820190506112c86000830185610b33565b6112d56020830184610b67565b9392505050565b60006040820190506112f16000830185610b67565b6112fe6020830184610b33565b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561133f578082015181840152602081019050611324565b8381111561134e576000848401525b50505050565b6000601f19601f8301169050919050565b600061137082611305565b61137a8185611310565b935061138a818560208601611321565b61139381611354565b840191505092915050565b60006060820190506113b36000830186610bc3565b6113c06020830185610b33565b81810360408301526113d28184611365565b9050949350505050565b60008115159050919050565b6113f1816113dc565b81146113fc57600080fd5b50565b60008151905061140e816113e8565b92915050565b60006020828403121561142a57611429610acb565b5b6000611438848285016113ff565b91505092915050565b60006080820190506114566000830187610b67565b6114636020830186610b33565b6114706040830185610bc3565b61147d6060830184610b33565b95945050505050565b6000819050919050565b6114a161149c82610b5d565b611486565b82525050565b6000819050919050565b6114c26114bd82610ad0565b6114a7565b82525050565b60006114d48285611490565b6020820191506114e482846114b1565b602082019150819050939250505056fea2646970667358221220d41e8e4342c6a11c32b7322580f9383bfcc1b85f2434cafae6b6cbb8690651ca64736f6c634300080b0033";

export class Oracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    _ethUsdPriceFeed: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Oracle> {
    return super.deploy(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      _ethUsdPriceFeed,
      overrides || {}
    ) as Promise<Oracle>;
  }
  getDeployTransaction(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    _ethUsdPriceFeed: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      _ethUsdPriceFeed,
      overrides || {}
    );
  }
  attach(address: string): Oracle {
    return super.attach(address) as Oracle;
  }
  connect(signer: Signer): Oracle__factory {
    return super.connect(signer) as Oracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleInterface {
    return new utils.Interface(_abi) as OracleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Oracle {
    return new Contract(address, _abi, signerOrProvider) as Oracle;
  }
}
