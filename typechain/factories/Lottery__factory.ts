/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lottery, LotteryInterface } from "../Lottery";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_linkToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_ethUsdPriceFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "randomResult",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "ReceivedRandomness",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "RequestedRandomness",
    type: "event",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEthPriceInUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRandomNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "keyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomResult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b506040516200175b3803806200175b8339818101604052810190620000389190620002ce565b84848173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050620000c4620000b86200012060201b60201c565b6200012860201b60201c565b8260c081815250508160e0818152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505062000356565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022082620001f3565b9050919050565b620002328162000213565b81146200023e57600080fd5b50565b600081519050620002528162000227565b92915050565b6000819050919050565b6200026d8162000258565b81146200027957600080fd5b50565b6000815190506200028d8162000262565b92915050565b6000819050919050565b620002a88162000293565b8114620002b457600080fd5b50565b600081519050620002c8816200029d565b92915050565b600080600080600060a08688031215620002ed57620002ec620001ee565b5b6000620002fd8882890162000241565b9550506020620003108882890162000241565b945050604062000323888289016200027c565b93505060606200033688828901620002b7565b9250506080620003498882890162000241565b9150509295509295909350565b60805160a05160c05160e0516113a8620003b3600039600081816104c4015281816105af0152610611015260008181610182015261058e015260008181610258015261087f0152600081816104e5015261084301526113a86000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806394985ddd1161006657806394985ddd146100fc578063d67b98a914610118578063dbdff2c114610136578063ddca3f4314610140578063f2fde38b1461015e57610093565b806342619f661461009857806361728f39146100b6578063715018a6146100d45780638da5cb5b146100de575b600080fd5b6100a061017a565b6040516100ad9190610a17565b60405180910390f35b6100be610180565b6040516100cb9190610a4b565b60405180910390f35b6100dc6101a4565b005b6100e661022c565b6040516100f39190610aa7565b60405180910390f35b61011660048036038101906101119190610b1f565b610256565b005b6101206102f2565b60405161012d9190610a17565b60405180910390f35b61013e610446565b005b61014861060f565b6040516101559190610a17565b60405180910390f35b61017860048036038101906101739190610b8b565b610633565b005b60045481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6101ac61072b565b73ffffffffffffffffffffffffffffffffffffffff166101ca61022c565b73ffffffffffffffffffffffffffffffffffffffff1614610220576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021790610c15565b60405180910390fd5b61022a6000610733565b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102db90610c81565b60405180910390fd5b6102ee82826107f9565b5050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610362573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103869190610d2e565b5050509150506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041f9190610de2565b9050600081600a6104309190610f71565b8361043b9190610feb565b905080935050505090565b61044e61072b565b73ffffffffffffffffffffffffffffffffffffffff1661046c61022c565b73ffffffffffffffffffffffffffffffffffffffff16146104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b990610c15565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161053c9190610aa7565b602060405180830381865afa158015610559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057d919061101c565b1161058757600080fd5b60006105d37f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061083f565b90507fe5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e816040516106049190610a4b565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000081565b61063b61072b565b73ffffffffffffffffffffffffffffffffffffffff1661065961022c565b73ffffffffffffffffffffffffffffffffffffffff16146106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a690610c15565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561071f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610716906110bb565b60405180910390fd5b61072881610733565b50565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b806004819055507fe73382ee77386cb2a660b5529dea033cb39d5f0f19c2ed8b6e4b0cb934db01b3600454836040516108339291906110db565b60405180910390a15050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f0000000000000000000000000000000000000000000000000000000000000000848660006040516020016108b3929190611104565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016108e0939291906111c6565b6020604051808303816000875af11580156108ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610923919061123c565b506000610945846000306000808981526020019081526020016000205461098f565b90506001600080868152602001908152602001600020546109669190611269565b6000808681526020019081526020016000208190555061098684826109cb565b91505092915050565b6000848484846040516020016109a894939291906112bf565b6040516020818303038152906040528051906020012060001c9050949350505050565b600082826040516020016109e0929190611346565b60405160208183030381529060405280519060200120905092915050565b6000819050919050565b610a11816109fe565b82525050565b6000602082019050610a2c6000830184610a08565b92915050565b6000819050919050565b610a4581610a32565b82525050565b6000602082019050610a606000830184610a3c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9182610a66565b9050919050565b610aa181610a86565b82525050565b6000602082019050610abc6000830184610a98565b92915050565b600080fd5b610ad081610a32565b8114610adb57600080fd5b50565b600081359050610aed81610ac7565b92915050565b610afc816109fe565b8114610b0757600080fd5b50565b600081359050610b1981610af3565b92915050565b60008060408385031215610b3657610b35610ac2565b5b6000610b4485828601610ade565b9250506020610b5585828601610b0a565b9150509250929050565b610b6881610a86565b8114610b7357600080fd5b50565b600081359050610b8581610b5f565b92915050565b600060208284031215610ba157610ba0610ac2565b5b6000610baf84828501610b76565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610bff602083610bb8565b9150610c0a82610bc9565b602082019050919050565b60006020820190508181036000830152610c2e81610bf2565b9050919050565b7f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00600082015250565b6000610c6b601f83610bb8565b9150610c7682610c35565b602082019050919050565b60006020820190508181036000830152610c9a81610c5e565b9050919050565b600069ffffffffffffffffffff82169050919050565b610cc081610ca1565b8114610ccb57600080fd5b50565b600081519050610cdd81610cb7565b92915050565b6000819050919050565b610cf681610ce3565b8114610d0157600080fd5b50565b600081519050610d1381610ced565b92915050565b600081519050610d2881610af3565b92915050565b600080600080600060a08688031215610d4a57610d49610ac2565b5b6000610d5888828901610cce565b9550506020610d6988828901610d04565b9450506040610d7a88828901610d19565b9350506060610d8b88828901610d19565b9250506080610d9c88828901610cce565b9150509295509295909350565b600060ff82169050919050565b610dbf81610da9565b8114610dca57600080fd5b50565b600081519050610ddc81610db6565b92915050565b600060208284031215610df857610df7610ac2565b5b6000610e0684828501610dcd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115610e9557808604811115610e7157610e70610e0f565b5b6001851615610e805780820291505b8081029050610e8e85610e3e565b9450610e55565b94509492505050565b600082610eae5760019050610f6a565b81610ebc5760009050610f6a565b8160018114610ed25760028114610edc57610f0b565b6001915050610f6a565b60ff841115610eee57610eed610e0f565b5b8360020a915084821115610f0557610f04610e0f565b5b50610f6a565b5060208310610133831016604e8410600b8410161715610f405782820a905083811115610f3b57610f3a610e0f565b5b610f6a565b610f4d8484846001610e4b565b92509050818404811115610f6457610f63610e0f565b5b81810290505b9392505050565b6000610f7c826109fe565b9150610f8783610da9565b9250610fb47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610e9e565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ff6826109fe565b9150611001836109fe565b92508261101157611010610fbc565b5b828204905092915050565b60006020828403121561103257611031610ac2565b5b600061104084828501610d19565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006110a5602683610bb8565b91506110b082611049565b604082019050919050565b600060208201905081810360008301526110d481611098565b9050919050565b60006040820190506110f06000830185610a08565b6110fd6020830184610a3c565b9392505050565b60006040820190506111196000830185610a3c565b6111266020830184610a08565b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561116757808201518184015260208101905061114c565b83811115611176576000848401525b50505050565b6000601f19601f8301169050919050565b60006111988261112d565b6111a28185611138565b93506111b2818560208601611149565b6111bb8161117c565b840191505092915050565b60006060820190506111db6000830186610a98565b6111e86020830185610a08565b81810360408301526111fa818461118d565b9050949350505050565b60008115159050919050565b61121981611204565b811461122457600080fd5b50565b60008151905061123681611210565b92915050565b60006020828403121561125257611251610ac2565b5b600061126084828501611227565b91505092915050565b6000611274826109fe565b915061127f836109fe565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112b4576112b3610e0f565b5b828201905092915050565b60006080820190506112d46000830187610a3c565b6112e16020830186610a08565b6112ee6040830185610a98565b6112fb6060830184610a08565b95945050505050565b6000819050919050565b61131f61131a82610a32565b611304565b82525050565b6000819050919050565b61134061133b826109fe565b611325565b82525050565b6000611352828561130e565b602082019150611362828461132f565b602082019150819050939250505056fea2646970667358221220d500e33c2007bbf48a64fe5bbd73829a1ff2648c05b6d85b714ef10e73fc4f9964736f6c634300080b0033";

export class Lottery__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    _ethUsdPriceFeed: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lottery> {
    return super.deploy(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      _ethUsdPriceFeed,
      overrides || {}
    ) as Promise<Lottery>;
  }
  getDeployTransaction(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    _ethUsdPriceFeed: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      _ethUsdPriceFeed,
      overrides || {}
    );
  }
  attach(address: string): Lottery {
    return super.attach(address) as Lottery;
  }
  connect(signer: Signer): Lottery__factory {
    return super.connect(signer) as Lottery__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryInterface {
    return new utils.Interface(_abi) as LotteryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lottery {
    return new Contract(address, _abi, signerOrProvider) as Lottery;
  }
}
